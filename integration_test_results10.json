{
    "Repo": {
      "remoteUrl": "https://github.com/minuz/full-integration-test-sample.git",
      "languages": ["cs"]
    },
    "IntegrationTest": {
      "fileContent": "using IntegrationTests.Orderers;\nusing Newtonsoft.Json;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing Xunit;\n\nnamespace IntegrationTests\n{\n    [Collection(nameof(BootstrapCollection))]\n    [CollectionOrder(0)]\n    public class BootstrapTests\n    {\n        private readonly BootstrapFixture _fixture;\n\n        public BootstrapTests(BootstrapFixture fixture)\n        {\n            _fixture = fixture;\n        }\n\n        [Fact]\n        public void OneTest()\n        {\n            Assert.NotNull(_fixture);\n        }\n    }\n    \n    [Collection(nameof(IntegrationTestCollection))]\n    [CollectionOrder(1)]\n    public class FixtureTests : IClassFixture<TestClassFixture>\n    {\n        private readonly IntegrationTestFixture _integrationTestFixture;\n        private readonly TestClassFixture _testClassFixture;\n\n        public FixtureTests(IntegrationTestFixture integrationTestFixture, TestClassFixture testClassFixture)\n        {\n            _integrationTestFixture = integrationTestFixture;\n            _testClassFixture = testClassFixture;\n        }\n\n\n        [Fact]\n        public async Task Test1()\n        {\n            var client = _testClassFixture.CreateClient();\n            var response = await client.GetAsync(\"/api/values\");\n            var values = JsonConvert.DeserializeObject<ICollection<string>>(await response.Content.ReadAsStringAsync());\n            Assert.Equal(2, values.Count);\n            Assert.NotNull(_integrationTestFixture);\n            Assert.NotNull(_testClassFixture);\n        }\n    }\n\n\n    [Collection(nameof(IntegrationTestCollection))]\n    [CollectionOrder(2)]\n    public class AnotherTestSet : IClassFixture<TestClassFixture>\n    {\n        private readonly IntegrationTestFixture _integrationTestFixture;\n        private readonly TestClassFixture _testClassFixture;\n\n        public AnotherTestSet(IntegrationTestFixture integrationTestFixture, TestClassFixture testClassFixture)\n        {\n            _integrationTestFixture = integrationTestFixture;\n            _testClassFixture = testClassFixture;\n        }\n\n\n        [Fact]\n        public void Test1()\n        {\n            Assert.NotNull(_integrationTestFixture);\n            Assert.NotNull(_testClassFixture);\n        }\n    }\n}"
    },
    "IntegrationTestRun": {
      "commitId": "b8e4fc577c827fe55f40cd02b06f03a6c16c2f63",
      "result": {
        "stdout": "Microsoft (R) Build Engine version 16.2.37902+b5aaefc9f for .NET Core\nCopyright (C) Microsoft Corporation. All rights reserved.",
        "stderr": "/Users/aadityasubedi/Desktop/eval-set/repo10/full-integration-test-sample/Blog.Database/Blog.Database.sqlproj : warning NU1503: Skipping restore for project '/Users/aadityasubedi/Desktop/eval-set/repo10/full-integration-test-sample/Blog.Database/Blog.Database.sqlproj'. The project file may be invalid or missing targets required for restore.\n/Users/aadityasubedi/Desktop/eval-set/repo10/full-integration-test-sample/Blog.Database/Blog.Database.sqlproj(60,3): error MSB4019: The imported project \"/Users/aadityasubedi/.dotnet/sdk/2.1.818/Microsoft/VisualStudio/v11.0/SSDT/Microsoft.Data.Tools.Schema.SqlTasks.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\nFixtures.cs(164,13): error CS0103: The name 'FixtureHelper' does not exist in the current context\nFixtures.cs(104,88): error CS0103: The name 'FixtureHelper' does not exist in the current context\nFixtures.cs(111,105): error CS0103: The name 'connString' does not exist in the current context\nFixtures.cs(112,13): error CS0103: The name 'FixtureHelper' does not exist in the current context\nFixtures.cs(112,46): error CS0103: The name 'FindSqlPackage' does not exist in the current context\nBuild FAILED.\n\n1 Warning(s)\n6 Error(s)",
        "returnCode": 1
      },
      "pass": false
    }
  }
  