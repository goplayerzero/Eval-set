{
    "Repo": {
      "remoteUrl": "https://github.com/ros2/ros2_documentation.git",
      "languages": ["py", "rst"]
    },
    "IntegrationTest": {
      "fileContent": "# Copyright 2025 Open Source Robotics Foundation, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nimport textwrap\n\nimport sys\n\n# Workaround to be able to import conf without it being a proper module\nsys.path.append('..')\n\nfrom conf import expand_interface_macros\nfrom conf import expand_package_macros\nfrom conf import expand_text_macros\n\n\ndef test_text_macros() -> None:\n    macros = {\n        'DISTRO': 'rolling',\n        'some_macro_name': 'some_value',\n    }\n    text = textwrap.dedent(\"\"\"\n        The current distro is: {DISTRO}.\n\n        This line does not use macros.\n        The value of some_macro_name is: {some_macro_name}.\n    \"\"\")\n    expected = textwrap.dedent(\"\"\"\n        The current distro is: rolling.\n\n        This line does not use macros.\n        The value of some_macro_name is: some_value.\n    \"\"\")\n    assert expected == expand_text_macros(text, macros)\n\n\ndef test_interface_macros() -> None:\n    macros = {\n        'DISTRO': 'rolling',\n    }\n    text = textwrap.dedent(\"\"\"\n        Publish a {interface(pkg_msgs/msg/Msg)}.\n\n        For more information, refer to `its definition <{interface_link(pkg_msgs/msg/Msg)}>`_.\n    \"\"\")\n    expected = textwrap.dedent(\"\"\"\n        Publish a `pkg_msgs/msg/Msg <https://docs.ros.org/en/rolling/p/pkg_msgs/msg/Msg.html>`_.\n\n        For more information, refer to `its definition <https://docs.ros.org/en/rolling/p/pkg_msgs/msg/Msg.html>`_.\n    \"\"\")\n    # Expanded interface macros use the DISTRO text macro, so those need to be expanded too\n    assert expected == expand_text_macros(expand_interface_macros(text), macros)\n\n\ndef test_package_macros() -> None:\n    macros = {\n        'DISTRO': 'rolling',\n    }\n    text = textwrap.dedent(\"\"\"\n        Add a dependency on {package(my_pkg_name)} to your package's ``package.xml`` file.\n\n        For more information, refer to the `API documentation <{package_link(my_pkg_name)}>`_.\n    \"\"\")\n    expected = textwrap.dedent(\"\"\"\n        Add a dependency on `my_pkg_name <https://docs.ros.org/en/rolling/p/my_pkg_name/>`_ to your package's ``package.xml`` file.\n\n        For more information, refer to the `API documentation <https://docs.ros.org/en/rolling/p/my_pkg_name/>`_.\n    \"\"\")\n    # Expanded package macros use the DISTRO text macro, so those need to be expanded too\n    assert expected == expand_text_macros(expand_package_macros(text), macros)\n"
    },
    "IntegrationTestRun": {
      "commitId": "a411bb2aa249742c9e382f16e34754d425fcfeba",
      "result": {
        "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.12.9, pytest-8.2.2, pluggy-1.5.0 -- /Users/aadityasubedi/miniconda3/bin/python\ncachedir: .pytest_cache\nUsing --randomly-seed=1702039997\nrootdir: /Users/aadityasubedi/Desktop/eval-set/repo17/ros2_documentation\nplugins: snapshot-0.9.0, socket-0.7.0, randomly-3.15.0, anyio-4.8.0, asyncio-0.26.0, langsmith-0.3.19, cov-6.1.1\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 3 items                                                              \n\ntest/test_macros.py::test_interface_macros PASSED                        [ 33%]\ntest/test_macros.py::test_text_macros PASSED                             [ 66%]\ntest/test_macros.py::test_package_macros PASSED                          [100%]\n\n============================== 3 passed in 0.03s ===============================",
        "stderr": "/Users/aadityasubedi/miniconda3/lib/python3.12/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))",
        "returnCode": 0
      },
      "pass": true
    }
  }
  